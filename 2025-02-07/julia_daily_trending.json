[
  {
    "repo": "CliMA/ClimaLand.jl",
    "href": "https://github.com/CliMA/ClimaLand.jl",
    "about": "Clima's Land Model",
    "star": "39",
    "fork": "10",
    "timestamp": "2025-02-07T02:14:46.168190",
    "stars_today": "0 stars today"
  },
  {
    "repo": "JuliaLang/julia",
    "href": "https://github.com/JuliaLang/julia",
    "about": "The Julia Programming Language",
    "star": "46,323",
    "fork": "5,532",
    "timestamp": "2025-02-07T02:14:46.168521",
    "stars_today": "8 stars today"
  },
  {
    "repo": "JuliaRegistries/General",
    "href": "https://github.com/JuliaRegistries/General",
    "about": "The official registry of general Julia packages",
    "star": "615",
    "fork": "481",
    "timestamp": "2025-02-07T02:14:46.168799",
    "stars_today": "0 stars today"
  },
  {
    "repo": "EnzymeAD/Reactant.jl",
    "href": "https://github.com/EnzymeAD/Reactant.jl",
    "about": "Optimize Julia Functions With MLIR and XLA for High-Performance Execution on CPU, GPU, TPU and more.",
    "star": "104",
    "fork": "11",
    "timestamp": "2025-02-07T02:14:46.169076",
    "stars_today": "0 stars today"
  },
  {
    "repo": "JuliaGPU/CUDA.jl",
    "href": "https://github.com/JuliaGPU/CUDA.jl",
    "about": "CUDA programming in Julia.",
    "star": "1,241",
    "fork": "234",
    "timestamp": "2025-02-07T02:14:46.169365",
    "stars_today": "1 star today"
  },
  {
    "repo": "JuliaHEP/JetReconstruction.jl",
    "href": "https://github.com/JuliaHEP/JetReconstruction.jl",
    "about": "Jet reconstruction (reclustering) with Julia",
    "star": "22",
    "fork": "6",
    "timestamp": "2025-02-07T02:14:46.169641",
    "stars_today": "0 stars today"
  },
  {
    "repo": "trixi-framework/Trixi.jl",
    "href": "https://github.com/trixi-framework/Trixi.jl",
    "about": "Trixi.jl: Adaptive high-order numerical simulations of conservation laws in Julia",
    "star": "562",
    "fork": "114",
    "timestamp": "2025-02-07T02:14:46.169917",
    "stars_today": "0 stars today"
  },
  {
    "repo": "SciML/OrdinaryDiffEq.jl",
    "href": "https://github.com/SciML/OrdinaryDiffEq.jl",
    "about": "High performance ordinary differential equation (ODE) and differential-algebraic equation (DAE) solvers, including neural ordinary differential equations (neural ODEs) and scientific machine learning (SciML)",
    "star": "574",
    "fork": "216",
    "timestamp": "2025-02-07T02:14:46.170216",
    "stars_today": "0 stars today"
  },
  {
    "repo": "ranocha/SummationByPartsOperators.jl",
    "href": "https://github.com/ranocha/SummationByPartsOperators.jl",
    "about": "A Julia library of summation-by-parts (SBP) operators used in finite difference, Fourier pseudospectral, continuous Galerkin, and discontinuous Galerkin methods to get provably stable semidiscretizations, paying special attention to boundary conditions.",
    "star": "102",
    "fork": "15",
    "timestamp": "2025-02-07T02:14:46.170506",
    "stars_today": "0 stars today"
  },
  {
    "repo": "compintell/Mooncake.jl",
    "href": "https://github.com/compintell/Mooncake.jl",
    "about": "language level autograd compiler for Julia",
    "star": "177",
    "fork": "8",
    "timestamp": "2025-02-07T02:14:46.170781",
    "stars_today": "0 stars today"
  },
  {
    "repo": "JuliaGPU/KernelAbstractions.jl",
    "href": "https://github.com/JuliaGPU/KernelAbstractions.jl",
    "about": "Heterogeneous programming in Julia",
    "star": "396",
    "fork": "70",
    "timestamp": "2025-02-07T02:14:46.171056",
    "stars_today": "0 stars today"
  },
  {
    "repo": "TuringLang/DynamicPPL.jl",
    "href": "https://github.com/TuringLang/DynamicPPL.jl",
    "about": "Implementation of domain-specific language (DSL) for dynamic probabilistic programming",
    "star": "188",
    "fork": "32",
    "timestamp": "2025-02-07T02:14:46.171342",
    "stars_today": "0 stars today"
  },
  {
    "repo": "oscar-system/Oscar.jl",
    "href": "https://github.com/oscar-system/Oscar.jl",
    "about": "A comprehensive open source computer algebra system for computations in algebra, geometry, and number theory.",
    "star": "384",
    "fork": "134",
    "timestamp": "2025-02-07T02:14:46.171617",
    "stars_today": "3 stars today"
  },
  {
    "repo": "JuliaDiff/ForwardDiff.jl",
    "href": "https://github.com/JuliaDiff/ForwardDiff.jl",
    "about": "Forward Mode Automatic Differentiation for Julia",
    "star": "912",
    "fork": "146",
    "timestamp": "2025-02-07T02:14:46.171890",
    "stars_today": "0 stars today"
  },
  {
    "repo": "JuliaPlots/Plots.jl",
    "href": "https://github.com/JuliaPlots/Plots.jl",
    "about": "Powerful convenience for Julia visualizations and data analysis",
    "star": "1,861",
    "fork": "358",
    "timestamp": "2025-02-07T02:14:46.172192",
    "stars_today": "1 star today"
  }
]