[
  {
    "repo": "JuliaRegistries/General",
    "href": "https://github.com/JuliaRegistries/General",
    "about": "The official registry of general Julia packages",
    "star": "648",
    "fork": "501",
    "timestamp": "2025-08-05T03:04:01.750150",
    "stars_today": "1 star today"
  },
  {
    "repo": "JuliaLang/julia",
    "href": "https://github.com/JuliaLang/julia",
    "about": "The Julia Programming Language",
    "star": "47,428",
    "fork": "5,613",
    "timestamp": "2025-08-05T03:04:01.750497",
    "stars_today": "7 stars today"
  },
  {
    "repo": "SciML/SciMLBase.jl",
    "href": "https://github.com/SciML/SciMLBase.jl",
    "about": "The Base interface of the SciML ecosystem",
    "star": "160",
    "fork": "110",
    "timestamp": "2025-08-05T03:04:01.750815",
    "stars_today": "0 stars today"
  },
  {
    "repo": "SciML/NonlinearSolve.jl",
    "href": "https://github.com/SciML/NonlinearSolve.jl",
    "about": "High-performance and differentiation-enabled nonlinear solvers (Newton methods), bracketed rootfinding (bisection, Falsi), with sparsity and Newton-Krylov support.",
    "star": "270",
    "fork": "51",
    "timestamp": "2025-08-05T03:04:01.751131",
    "stars_today": "0 stars today"
  },
  {
    "repo": "SciML/LinearSolve.jl",
    "href": "https://github.com/SciML/LinearSolve.jl",
    "about": "LinearSolve.jl: High-Performance Unified Interface for Linear Solvers in Julia. Easily switch between factorization and Krylov methods, add preconditioners, and all in one interface.",
    "star": "262",
    "fork": "66",
    "timestamp": "2025-08-05T03:04:01.751456",
    "stars_today": "0 stars today"
  },
  {
    "repo": "Juliaoscode/JuliaOS",
    "href": "https://github.com/Juliaoscode/JuliaOS",
    "about": "JuliaOS Open Source AI & Swarm Intelligence Framework",
    "star": "102",
    "fork": "61",
    "timestamp": "2025-08-05T03:04:01.751733",
    "stars_today": "0 stars today"
  }
]